name: release
on:
  push:
    # branches:
    #   - "**"
    
    tags:
      - v*.**
jobs:
  release:
    name: create_release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - run: echo "${{ steps.get_version.outputs.VERSION }}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION  }}
          release_name: Release ${{ steps.get_version.outputs.VERSION  }}
          # body: nul
          draft: false
          prerelease: false
      - run:  echo  ${{ steps.create_release.outputs.upload_url }}
        

  build:
    name: build
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
          - goarch: amd64
            goos: darwin
          - goarch: arm64
            goos: linux
          - goarch: arm64
            goos: darwin
    steps:
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - run: echo "${{ steps.get_version.outputs.VERSION }}"
      - run: echo "${{ needs.release.outputs.upload_url }}"
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: build
        run: go build -o apiMailSend-${{ matrix.goos }}-${{ matrix.goarch }}-${{ steps.get_version.outputs.VERSION  }} -trimpath -ldflags "-w -s" -v
      - name: upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: apiMailSend-${{ matrix.goos }}-${{ matrix.goarch }}-${{ steps.get_version.outputs.VERSION  }}
          path: ./apiMailSend-${{ matrix.goos }}-${{ matrix.goarch }}-${{ steps.get_version.outputs.VERSION  }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }} 
          asset_path: ./apiMailSend-${{ matrix.goos }}-${{ matrix.goarch }}-${{ steps.get_version.outputs.VERSION  }}
          asset_name: apiMailSend-${{ matrix.goos }}-${{ matrix.goarch }}-${{ steps.get_version.outputs.VERSION  }}
          asset_content_type: application/octet-stream	
